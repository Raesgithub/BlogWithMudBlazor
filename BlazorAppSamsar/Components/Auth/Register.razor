@page "/auth/register"
@using BlazorAppSamsar.Data
@using BlazorAppSamsar.Models
@using BCrypt.Net;

<PageTitle>Home</PageTitle>
<div class="row">
    <div class="col-md-8 col-xl-6 mx-auto p-3 mt-3 border shadow">
        <EditForm Model="AppUser" Enhance FormName="f1" OnValidSubmit="RegisterClick">
            <DataAnnotationsValidator/>
            <div class="mt-3">
                <label class="form-label">Username</label>
                <InputText @bind-Value="AppUser.Username" class="form-control"/>
                <ValidationMessage For="()=>AppUser.Username"/>
            </div>
            <div class="mt-3">
                <label class="form-label">name and family</label>
                <InputText @bind-Value="AppUser.NickName" class="form-control" />
                <ValidationMessage For="() => AppUser.NickName" />
            </div>
            <div class="mt-3">
                <label class="form-label">Password</label>
                <InputText type="password" @bind-Value="AppUser.Password" class="form-control" />
                <ValidationMessage For="() => AppUser.Password" />
            </div>
            <div class="mt-3">
                <button class="btn btn-success" type="submit">Register</button>
            </div>

        </EditForm>
        @if (isRegister)
        {
            <div class="alert alert-success mt-3">
                succesfully register . please use <a class="btn btn-primary" href="/auth/login">login</a>
            </div>
        }
        @if (mes!="")
        {
            <div class="alert alert-danger mt-3">
                <strong>@mes</strong>
            </div>
        }
    </div>
</div>
@inject DataContext dbcontext
@inject NavigationManager nav
@code{
    [SupplyParameterFromForm]
    public AppUser AppUser { get; set; } = new AppUser();
    bool isRegister = false;
    string mes = "";

    private void RegisterClick(EditContext args)
    {
        if(dbcontext.AppUsers.Where(a => a.Username.ToLower() == AppUser.Username.ToLower()).Any())
        {
            mes = "please select another username";
            return;
        }


        AppUser.UserId = Guid.NewGuid().ToString();
        AppUser.CDate = DateTime.Now;
        AppUser.Password = BCrypt.HashPassword(AppUser.Password, workFactor: 12);
        dbcontext.AppUsers.Add(AppUser);
        dbcontext.SaveChanges();
        isRegister = true;
        AppUser  = new AppUser();
        //nav.NavigateTo("/auth/login");
    }
}




